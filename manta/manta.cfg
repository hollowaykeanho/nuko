#!/bin/bash
# =============================
# Manta repo configuration file
# =============================

# REPO - DETAILS
# -------------------
# name of the application for this repository
name="nuko"

# gpg id for sigining the compiled packages. You should setup your gpg already
# before using manta to compile your packages.
gpg_id="7AE8191A"

# CHANGELOG - RELEASE
# -------------------
# change default priority for changelog release. Default is low. Choose either
# 'low', 'medium' or 'high'.
priority="low"

# version tells manta where to get the version number. use $() to run the
# subroutines.
version=$(./nuko.sh -v)

# reference_branch tells  manta the git branch that always get the latest
# updates
reference_branch="next"

# target_branch tells manta the git branch that is always getting merged.
# Default is master.
target_branch="master"


# DEB - BUILD
# -----------
# the list of supported distributions for building deb package. It goes in
# a pattern as:
#  [OS_ID][OS][OS_REVISION]~[DIST_SERIES]ppa[PACKAGE_REVISION]-[DIST_SERIES]
# example, Ubuntu (id: 0), cosmic series. 1st revision:
#     0ubuntu1~cosmicppa1-cosmic
deb_distributions=(
	0ubuntu1~cosmicppa1-cosmic
	0ubuntu1~bionicppa1-bionic
	0ubuntu1~artfulppa1-artful
	0ubuntu1~xenialppa1-xenial
	0ubuntu1~trustyppa1-trusty
)

# the ppa for upstream the package. For Ubuntu, it is something like
# ppa:name/repo
deb_ppa="ppa:zoralab/nuko"

# this function assembles the correct files into the package workspace. Manta
# will call this function before running the package build. Manta provides 2
# environment variables:
# 1. $SRC_PATH -- path where manta execute, usually at root repository
# 2. $DEST_PATH -- destination path where files are copied to.
assemble_files() {
	cp $SRC_PATH/nuko.sh $DEST_PATH/.
	cp -r $SRC_PATH/nukolib $DEST_PATH/.
}
